<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>90</y>
      <w>135</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--

- data : Type

--

+ Node&lt;Type&gt;(Type) : constructor
+ Node&lt;Type&gt;(): constructor

+ getData() : Type
+ setData(Type) : void

bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>270</y>
      <w>210</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>LinearNode&lt;Type&gt;
--

-  next : Node&lt;Type&gt; *

--
+ LinearNode&lt;Type&gt;() : constructor
+ LinearNode&lt;Type&gt;(Type) : constructor
+ LinearNde&lt;Type&gt;(Type, LinearNode&lt;Type&gt;) : constructor

+ getNext() : Node&lt;Type&gt; *
+ setNext(Node&lt;Type&gt; *) : void
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>355</x>
      <y>225</y>
      <w>15</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>375</y>
      <w>155</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--

- size : int
- internalArray : Type *

--

+ Array&lt;Type&gt;(Array&lt;Type&gt;) : constructor
+ Array&lt;Type&gt;(int) : constructor
+ getSize() : int
+ setAtIndex(int,Type) : void
+ getFromIndex(int) : Type
+ operator []
+ operator = Array&lt;Type&gt; &amp;
+ ~Array() : destructor


bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>245</y>
      <w>150</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>List&lt;Type&gt;
--
# size : int
--
*List Structure Methods*
getFromIndex(int) : Type
add(Type) : void
addAtIndex(int, Type) : void
remove(int) : Type

*List Accessors*
getSize() : int
getFront() : LinearNode&lt;Type&gt; 
getEnd() : LinearNode&lt;Type&gt;


fg=dark_gray
bg=891234</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>680</x>
      <y>415</y>
      <w>150</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>LinkedList&lt;Type&gt;
--
- front : LinearNode&lt;Type&gt;
- end : LinearNode&lt;Type&gt;
--
+ LinkedList() : constructor
+ ~LinkedList() : destructor

*List Structure Methods*
+ getFromIndex(int) : Type
+ add(Type) : void
+ addAtIndex(int, Type) : void
+ remove(int) : Type
+ contains(Type) : bool
+ setAtIndex(int, Type) : Type

*List Accessors*
+ getSize() : int
+ getFront() : LinearNode&lt;Type&gt;*
+ getEnd() : LinearNode&lt;Type&gt;*




bg=98342745
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>755</x>
      <y>620</y>
      <w>125</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>Queue&lt;Type&gt;
--
+ Queue() : constructor
+ ~Queue() : destructor

*Queue Methods*
+ enqueue(Type) : void
+ dequeue() : Type
+ peek() : Type

*List Structure Methods*
+ getFromIndex(int) : Type
+ add(Type) : void
+ addAtIndex(int, Type) : void
+ remove(int) : Type
+ contains(Type) : bool
+ setAtIndex(int, Type) : Type

*List Accessors*
+ getSize() : int
+ getFront() : LinearNode&lt;Type&gt;*
+ getEnd() : LinearNode&lt;Type&gt;*

bg=98342745
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>625</x>
      <y>620</y>
      <w>125</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>Stack&lt;Type&gt;
--
+ Stack() : constructor
+ ~Stack() : destructor

*Stack Methods*
+ push(Type) : void
+ pop() : Type
+ peek() : Type

*List Structure Methods*
+ getFromIndex(int) : Type
+ add(Type) : void
+ addAtIndex(int, Type) : void
+ remove(int) : Type
+ contains(Type) : bool
+ setAtIndex(int, Type) : Type

*List Accessors*
+ getSize() : int
+ getFront() : LinearNode&lt;Type&gt;*
+ getEnd() : LinearNode&lt;Type&gt;*

bg=98342745
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>665</x>
      <y>365</y>
      <w>60</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>305</y>
      <w>125</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
Made of 0...n nodes</panel_attributes>
    <additional_attributes>10.0;20.0;230.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>85</x>
      <y>285</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Music
--
+ Music() : constructor
+ ~Music(string) : constructor
+ getXXX() : various
+ == : bool
+ &lt;&lt; : ostream
+ &lt; : bool
+ &gt; : bool

bg=777909876</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>85</x>
      <y>180</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Crime Data
--
+ CrimeData() : constructor
+ ~CrimeData(string) : constructor
+ getXXX() : various
+ == : bool
+ &lt;&lt; : ostream
+ &lt; : bool
+ &gt; : bool

bg=777909876</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>320</y>
      <w>125</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>320</y>
      <w>95</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>320</y>
      <w>95</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>795</x>
      <y>565</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>565</y>
      <w>40</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>345</x>
      <y>545</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>LinearTester
--
bg=78766443</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>345</x>
      <y>630</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>GraphTester
--
bg=78766443</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>630</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>HashtableTester
--
bg=78766443</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>715</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>TreeTester
--
bg=78766443</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>345</x>
      <y>715</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>AlgorithmTester
--
bg=78766443</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>570</y>
      <w>350</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
Aggregation</panel_attributes>
    <additional_attributes>10.0;20.0;680.0;20.0;680.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>560</y>
      <w>195</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
Aggregation</panel_attributes>
    <additional_attributes>10.0;20.0;370.0;20.0;370.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>550</y>
      <w>240</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
Aggregation</panel_attributes>
    <additional_attributes>10.0;20.0;460.0;20.0</additional_attributes>
  </element>
</diagram>
